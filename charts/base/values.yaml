name: 
instance: 

extraLabels: {}
annotations: {}
podAnnotations: {}
podLabels: {}

controller: "deployment"

replicas: 1

## Number of old ReplicaSets to retain
revisionHistoryLimit: 10

image:
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Can be templated.
  ##
  ## Created with : kubectl create secret docker-registry scaleway-registry --docker-server=rg.fr-par.scw.cloud --docker-username=technique-registry --docker-password=$SCW_SECRET_KEY
  ## Must be present in every needed namespace 
  pullSecrets: []
  # - name: scaleway-registry

## Create HorizontalPodAutoscaler object for Deployment type
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPU: "70"
  targetMemory: ""
  behavior: {}

## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
deploymentStrategy:
  type: RollingUpdate

## ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# If fail = no more traffic through Kubernetes Services
readinessProbe: {}
  # httpGet:
  #   path: /api/health
  #   port: 3000
# If fail = restart
livenessProbe: {}
  # httpGet:
  #   path: /api/health
  #   port: 3000
  # initialDelaySeconds: 60
  # timeoutSeconds: 30
  # failureThreshold: 10
# For legacy/heavy apps that might require an additional startup time on their first initialization
startupProbe: {}

# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
dnsConfig:
  nameservers:
  - 8.8.8.8
  searches: []
  options:
  - name: ndots
    value: "5"
dnsPolicy: Default

# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []
# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
affinity: {}

pod: 
  # Containers configuration
  container: {}
  # Volumes attached to pod (can be configmap, secret or pvc)
  volume: {}

volume: {}

secret: {}

configmap: {}

service:
  # app-http:
  #   ports: []

ingress:
  # app-http:
  #   hosts: []
  #   tls: []

